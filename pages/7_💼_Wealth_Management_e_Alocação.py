# pages/7_üíº_Wealth_Management.py

import streamlit as st
import pandas as pd
import plotly.express as px

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(page_title="Wealth Management - Aloca√ß√£o", page_icon="üíº", layout="wide")

# --- DADOS: ALOCA√á√ÉO ESTRAT√âGICA DOS PORTF√ìLIOS MODELO ---
# Estes dados ser√£o a base da nossa ferramenta. No futuro, podem vir de um banco de dados ou API interna.

portfolio_data = {
    "Conservador": {
        "Caixa": 20, "Renda Fixa Brasil": 50, "Renda Fixa Internacional": 15,
        "A√ß√µes Brasil": 5, "A√ß√µes Internacional": 5, "Fundos Imobili√°rios": 5, "Alternativos": 0
    },
    "Moderado": {
        "Caixa": 10, "Renda Fixa Brasil": 40, "Renda Fixa Internacional": 15,
        "A√ß√µes Brasil": 15, "A√ß√µes Internacional": 15, "Fundos Imobili√°rios": 5, "Alternativos": 0
    },
    "Balanceado": {
        "Caixa": 5, "Renda Fixa Brasil": 30, "Renda Fixa Internacional": 20,
        "A√ß√µes Brasil": 20, "A√ß√µes Internacional": 20, "Fundos Imobili√°rios": 5, "Alternativos": 0
    },
    "Crescimento": {
        "Caixa": 5, "Renda Fixa Brasil": 20, "Renda Fixa Internacional": 15,
        "A√ß√µes Brasil": 25, "A√ß√µes Internacional": 25, "Fundos Imobili√°rios": 5, "Alternativos": 5
    },
    "Agressivo": {
        "Caixa": 2, "Renda Fixa Brasil": 10, "Renda Fixa Internacional": 10,
        "A√ß√µes Brasil": 34, "A√ß√µes Internacional": 34, "Fundos Imobili√°rios": 5, "Alternativos": 5
    }
}

# --- FUN√á√ÉO AUXILIAR PARA CRIAR OS GR√ÅFICOS ---
def create_allocation_chart(portfolio_name, data):
    """Cria um gr√°fico de pizza interativo para a aloca√ß√£o de um portf√≥lio."""
    df = pd.DataFrame(list(data.items()), columns=['Classe de Ativo', 'Aloca√ß√£o (%)'])
    fig = px.pie(
        df,
        values='Aloca√ß√£o (%)',
        names='Classe de Ativo',
        title=f"<b>{portfolio_name}</b>",
        hole=.3, # Cria o efeito "donut chart"
        color_discrete_sequence=px.colors.sequential.GnBu_r # Paleta de cores
    )
    fig.update_traces(textposition='inside', textinfo='percent+label', insidetextfont=dict(size=14))
    fig.update_layout(
        showlegend=False,
        title_font_size=20,
        title_x=0.5,
        margin=dict(l=20, r=20, t=40, b=20)
    )
    return fig

# --- INTERFACE DA APLICA√á√ÉO ---

st.title("üíº Painel de Wealth Management e Aloca√ß√£o Estrat√©gica")
st.markdown("Vis√£o geral dos Portf√≥lios Modelo e da aloca√ß√£o de ativos recomendada pela casa.")

st.divider()

# --- Vis√£o T√°tica do Comit√™ de Investimentos ---
st.subheader("Vis√£o T√°tica do Comit√™ de Investimentos")
with st.expander("Clique para ver os posicionamentos t√°ticos atuais", expanded=True):
    st.info("""
        - **OVERWEIGHT (Aloca√ß√£o Acima da Estrat√©gica):** A√ß√µes Internacionais.
          - *Justificativa:* Oportunidades em setores de tecnologia e sa√∫de com valuations atrativos e descorrela√ß√£o com o mercado local.
        - **NEUTRO:** A√ß√µes Brasil, Fundos Imobili√°rios, Renda Fixa Internacional.
          - *Justificativa:* Posi√ß√µes alinhadas √† estrat√©gia de longo prazo, aguardando maior clareza no cen√°rio macroecon√¥mico.
        - **UNDERWEIGHT (Aloca√ß√£o Abaixo da Estrat√©gica):** Renda Fixa Brasil Pr√©-Fixada.
          - *Justificativa:* Incerteza fiscal no curto prazo aumenta a volatilidade. Prefer√™ncia por t√≠tulos p√≥s-fixados ou atrelados √† infla√ß√£o.
    """)
    st.caption(f"√öltima atualiza√ß√£o: {datetime.now().strftime('%d/%m/%Y')}")

st.divider()

# --- Painel de Portf√≥lios Modelo ---
st.subheader("Aloca√ß√£o Estrat√©gica de Longo Prazo")

cols = st.columns(len(portfolio_data))

for i, (portfolio_name, data) in enumerate(portfolio_data.items()):
    with cols[i]:
        fig = create_allocation_chart(portfolio_name, data)
        st.plotly_chart(fig, use_container_width=True)

st.divider()

st.success("‚úÖ **Fase 1 Conclu√≠da:** Base dos Portf√≥lios Modelo estabelecida. O pr√≥ximo passo ser√° detalhar os ativos recomendados para cada classe (Fase 2).")
